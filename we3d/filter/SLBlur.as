package we3d.filter {	import flash.display.BitmapData;	import flash.filters.BlurFilter;	import flash.filters.BitmapFilterQuality;	import flash.geom.Point;	import we3d.renderer.RenderSession;		/** 	 * The SLBlur applies a blur on the rendered image	 */	public class SLBlur extends BackgroundFilter 	{		public function SLBlur (bx:int=2, by:int=2, qualy:int=1, px:Number=0, py:Number=0) {			blurX = bx;			blurY = by;			blurQuality = qualy;			p.x = px;			p.y = py;		}				public var p:Point = new Point(0,0);		private var bf:BlurFilter = new BlurFilter(2, 2, 1);				public function get blurX () :int {			return bf.blurX;		}		public function set blurX (v:int) :void {			bf.blurX = v;		}				public function get blurY () :int {			return bf.blurY;		}		public function set blurY (v:int) :void {			bf.blurY = v;		}				public function get blurQuality () :int {			return bf.quality;		}		public function set blurQuality (v:int) :void {			bf.quality = v;		}				public override function endFrame (session:RenderSession) :void {			if(layers) {				var L:int = layers.length;				var i:int;				var bmp:BitmapData;								for(i=0; i<L; i++) {					bmp = layers[i].bmp;					if(bmp) {						bmp.applyFilter(bmp, bmp.rect, p, bf);					}				}			}		}			}}